package io.blitz.curl.sprint;

import java.util.Map;
import org.apache.commons.codec.binary.Base64;

/**
 * Represents the response object generated by the sprint. Contains all
 * of the headers and the response payload, if any.
 * @author ghermeto
 */
public class Response {
    
    /**
     * The entire response line (HTTP/1.1 200 Okay, for example)
     */
    private String line;
    
    /**
     * The response status code
     */
    private Integer status;
    
    /**
     * The message in the response line
     */
    private String message;
    
    /**
     * All of the response headers (as a Map of name/value pairs)
     */
    private Map<String, Object> headers;
    
    /**
     * The response content, if any
     */
    private String content;

    public Response(String line, Integer status, String message, 
            Map<String, Object> headers, String content) {
        this.line = line;
        this.status = status;
        this.message = message;
        this.headers = headers;
        this.content = content;
    }

    public String getContent() {
        return (content == null) ? null : new String(Base64.decodeBase64(content.getBytes()));
    }

    public Map<String, Object> getHeaders() {
        return headers;
    }

    public String getLine() {
        return line;
    }

    public String getMessage() {
        return message;
    }

    public Integer getStatus() {
        return status;
    }
}
